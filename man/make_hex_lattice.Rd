% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make.R
\name{make_hex_lattice}
\alias{make_hex_lattice}
\alias{hex_lattice}
\title{Create a hexagonal lattice graph}
\usage{
make_hex_lattice(dims, directed = FALSE, mutual = FALSE)

hex_lattice(...)
}
\arguments{
\item{dims}{Integer vector, defines the shape of the lattice. See details below.}

\item{directed}{Logical scalar, whether to create a directed graph.}

\item{mutual}{Logical scalar, if the graph is directed this parameter
controls whether edges are mutual (bidirectional).}

\item{...}{Passed to \code{make_hex_lattice()}.}
}
\value{
An igraph graph.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
}
\details{
\code{make_hex_lattice()} creates a hexagonal lattice where each interior vertex
has degree 3. The hexagonal lattice and triangular lattice are different
structures; they are planar duals of each other. See \code{igraph_triangular_lattice()}
in the C library for the triangular lattice.

A hexagonal lattice is a lattice structure where each interior vertex
(not on the boundary) has degree 3. The function supports creating lattices
with different boundary shapes.

The \code{dims} parameter determines the boundary shape of the lattice:
\itemize{
\item If \code{dims} is a single number, the lattice has a triangular boundary
where each side contains \code{dims} vertices.
\item If \code{dims} is a vector of length 2, the lattice has a rectangular
boundary with sides containing \code{dims[1]} and \code{dims[2]} vertices.
\item If \code{dims} is a vector of length 3, the lattice has a hexagonal
boundary where the sides contain \code{dims[1]}, \code{dims[2]}, and \code{dims[3]}
vertices.
}
}
\examples{
# Triangular shape with 5 vertices on each side
g1 <- make_hex_lattice(5)
plot(g1)

# Rectangular shape
g2 <- make_hex_lattice(c(3, 4))
plot(g2)

# Hexagonal shape
g3 <- make_hex_lattice(c(3, 3, 3))
plot(g3)
}
\seealso{
Other deterministic constructors: 
\code{\link{graph_from_atlas}()},
\code{\link{graph_from_edgelist}()},
\code{\link{graph_from_literal}()},
\code{\link{make_}()},
\code{\link{make_chordal_ring}()},
\code{\link{make_circulant}()},
\code{\link{make_empty_graph}()},
\code{\link{make_full_citation_graph}()},
\code{\link{make_full_graph}()},
\code{\link{make_full_multipartite}()},
\code{\link{make_graph}()},
\code{\link{make_lattice}()},
\code{\link{make_ring}()},
\code{\link{make_star}()},
\code{\link{make_tree}()},
\code{\link{make_turan}()}
}
\concept{deterministic constructors}
\section{Related documentation in the C library}{\href{https://igraph.org/c/html/latest/igraph-Generators.html#igraph_hexagonal_lattice}{\code{hexagonal_lattice()}}.}

