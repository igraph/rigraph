% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/operators.R
\name{mycielskian}
\alias{mycielskian}
\title{Mycielski transformation of a graph}
\usage{
mycielskian(graph, k = 1)
}
\arguments{
\item{graph}{The input graph.}

\item{k}{Integer, the number of Mycielski iterations to perform (must be non-negative).}
}
\value{
An igraph graph object.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
}
\details{
The Mycielskian of a graph is a larger graph formed using a construction due to Jan Mycielski that increases the chromatic number by one while preserving the triangle-free property.
The Mycielski construction can be used to create triangle-free graphs with an arbitrarily large chromatic number.

Let the \eqn{n} vertices of the given graph \eqn{G} be \eqn{v_1, \ldots, v_n}.
The Mycielskian of \eqn{G}, denoted \eqn{M(G)}, contains \eqn{G} itself as a subgraph, together with \eqn{n+1} additional vertices:
\itemize{
\item A vertex \eqn{u_i} corresponding to each vertex \eqn{v_i} of \eqn{G}.
\item An extra vertex \eqn{w}.
}

The edges are added as follows:
\itemize{
\item Each vertex \eqn{u_i} is connected to \eqn{w}, forming a star.
\item For each edge \eqn{(v_i, v_j)} in \eqn{G}, two new edges are added: \eqn{(u_i, v_j)} and \eqn{(v_i, u_j)}.
}

Thus, if \eqn{G} has \eqn{n} vertices and \eqn{m} edges, the Mycielskian \eqn{M(G)} has \eqn{2n + 1} vertices, and \eqn{3m + n} edges.

This function can apply the Mycielski transformation an arbitrary number of times, controlled by the parameter \eqn{k}.
The \eqn{k}-th iterated Mycielskian has \eqn{n_k = (n + 1) \cdot 2^k - 1} vertices and \eqn{m_k = ((2m + 2n + 1) \cdot 3^k - n_{k+1}) / 2} edges, where \eqn{n} and \eqn{m} are the vertex and edge count of the original graph, respectively.
}
\examples{
# Create a Mycielskian of a triangle
g <- make_full_graph(3)
mg <- mycielskian(g, 1)
print_all(mg)
vcount(mg)  # Should be 2*3 + 1 = 7
ecount(mg)  # Should be 3*3 + 3 = 12

# Two iterations of the Mycielski transformation
g <- make_ring(5)
mg <- mycielskian(g, 2)
vcount(mg)
ecount(mg)
}
\seealso{
\code{\link[=make_mycielski_graph]{make_mycielski_graph()}} for creating Mycielski graphs directly

Other functions for manipulating graph structure: 
\code{\link{+.igraph}()},
\code{\link{add_edges}()},
\code{\link{add_vertices}()},
\code{\link{complementer}()},
\code{\link{compose}()},
\code{\link{connect}()},
\code{\link{contract}()},
\code{\link{delete_edges}()},
\code{\link{delete_vertices}()},
\code{\link{difference}()},
\code{\link{difference.igraph}()},
\code{\link{disjoint_union}()},
\code{\link{edge}()},
\code{\link{igraph-minus}},
\code{\link{intersection}()},
\code{\link{intersection.igraph}()},
\code{\link{path}()},
\code{\link{permute}()},
\code{\link{rep.igraph}()},
\code{\link{reverse_edges}()},
\code{\link{simplify}()},
\code{\link{union}()},
\code{\link{union.igraph}()},
\code{\link{vertex}()}
}
\concept{Mycielski graph}
\concept{functions for manipulating graph structure}
