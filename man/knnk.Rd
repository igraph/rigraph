% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/structural-properties.R
\name{knnk}
\alias{knnk}
\title{Degree correlation function}
\usage{
knnk(
  graph,
  weights = NULL,
  from.mode = c("out", "in", "all", "total"),
  to.mode = c("in", "out", "all", "total"),
  directed.neighbors = TRUE
)
}
\arguments{
\item{graph}{The input graph. It may be directed.}

\item{weights}{Optional edge weights. If the graph has a \code{weight} edge
attribute, then this is used by default. If this argument is given,
then edge weights are used in the calculation. Set to \code{NA} to ignore
the \code{weight} edge attribute even if present.}

\item{from.mode}{How to compute the degree of source vertices in directed graphs?
\code{out} uses out-degree, \verb{in} uses in-degree, and \code{all} or \code{total} uses
total degree. Ignored for undirected graphs.}

\item{to.mode}{How to compute the degree of target vertices (neighbors) in
directed graphs? \code{out} uses out-degree, \verb{in} uses in-degree, and \code{all}
or \code{total} uses total degree. Ignored for undirected graphs.}

\item{directed.neighbors}{Logical scalar. Whether to consider edges as directed
when computing neighbor relationships in directed graphs. If \code{FALSE},
edges are treated as undirected (i.e., reciprocal). Ignored for undirected graphs.}
}
\value{
A numeric vector. Element i contains the mean degree of neighbors
of vertices with degree i-1. Note that degree 0 is included at index 1.
The length of the vector is one more than the maximum degree in the graph.
}
\description{
Computes the k_nn(k) degree correlation function, which gives the mean degree
of neighbors of vertices with degree k.
}
\details{
The k_nn(k) function characterizes degree correlations in networks.
It provides the average degree of neighbors as a function of vertex degree.
This is one of the primary ways to measure degree assortativity in networks.

For directed graphs, this function provides fine-grained control over how
in/out degrees are used through the \code{from.mode} and \code{to.mode} parameters.

Note that for degrees that do not appear in the network, the result is \code{NaN}
(zero divided by zero).

The weighted version computes a weighted average as:

\deqn{k_{nn}(k) = \frac{\sum_{i: k_i=k} \sum_j w_{ij} k_j}{\sum_{i: k_i=k} \sum_j w_{ij}}}{k_nn(k) = sum_(i: k_i=k) sum_j w_ij k_j / sum_(i: k_i=k) sum_j w_ij}

where the first sum runs over vertices of degree k, the second sum runs
over their neighbors j, w_ij is the edge weight, and k_j is the neighbor's degree.
}
\examples{
# Ring graph - all vertices have degree 2, so k_nn(2) = 2
g <- make_ring(10)
knnk(g)

# Star graph
g2 <- make_star(10)
knnk(g2)

# Scale-free graph - typically shows degree anti-correlation
g3 <- sample_pa(1000, m = 5)
result <- knnk(g3)
plot(result, xlab = "k", ylab = "k_nn(k)", type = "l")

# Directed graph with different degree modes
g4 <- sample_pa(100, directed = TRUE)
knnk(g4, from.mode = "out", to.mode = "in")
}
\references{
R. Pastor-Satorras, A. Vazquez, A. Vespignani:
Dynamical and Correlation Properties of the Internet,
Phys. Rev. Lett., vol. 87, pp. 258701 (2001).
\doi{10.1103/PhysRevLett.87.258701}

A. Vazquez, R. Pastor-Satorras, A. Vespignani:
Large-scale topological and dynamical properties of the Internet,
Phys. Rev. E, vol. 65, pp. 066130 (2002).
\doi{10.1103/PhysRevE.65.066130}

A. Barrat, M. Barthelemy, R. Pastor-Satorras, and A. Vespignani:
The architecture of complex weighted networks,
Proc. Natl. Acad. Sci. USA 101, 3747 (2004).
\doi{10.1073/pnas.0400087101}

A.-L. BarabÃ¡si, Network Science (2016). Chapter 7, Degree Correlations.
\url{https://networksciencebook.com/chapter/7#measuring-degree}
}
\seealso{
\code{\link[=knn]{knn()}} for computing average nearest neighbor degree for specific vertices

Other structural.properties: 
\code{\link{bfs}()},
\code{\link{component_distribution}()},
\code{\link{connect}()},
\code{\link{constraint}()},
\code{\link{coreness}()},
\code{\link{degree}()},
\code{\link{dfs}()},
\code{\link{distance_table}()},
\code{\link{edge_density}()},
\code{\link{feedback_arc_set}()},
\code{\link{feedback_vertex_set}()},
\code{\link{girth}()},
\code{\link{is_acyclic}()},
\code{\link{is_dag}()},
\code{\link{is_matching}()},
\code{\link{k_shortest_paths}()},
\code{\link{knn}()},
\code{\link{reciprocity}()},
\code{\link{subcomponent}()},
\code{\link{subgraph}()},
\code{\link{topo_sort}()},
\code{\link{transitivity}()},
\code{\link{unfold_tree}()},
\code{\link{which_multiple}()},
\code{\link{which_mutual}()}
}
\author{
Gabor Csardi \email{csardi.gabor@gmail.com}
}
\concept{structural.properties}
\keyword{graphs}
\section{Related documentation in the C library}{\href{https://igraph.org/c/html/latest/igraph-Structural.html#igraph_degree_correlation_vector}{\code{degree_correlation_vector()}}.}

