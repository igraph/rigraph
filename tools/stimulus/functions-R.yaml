# vim:set ts=4 sw=4 sts=4 et:
#
# This file is a YAML representation of the R-specific parts of the function
# definitions. They are currently used by Stimulus to generate code for the
# R interface
#
# See https://github.com/igraph/stimulus for more information

#######################################
# The basic interface
#######################################

igraph_empty:
    IGNORE: RR

igraph_add_edges:
    IGNORE: RR, RC, RInit

igraph_add_vertices:
    IGNORE: RR, RC, RInit

igraph_delete_edges:
    IGNORE: RR, RC

igraph_delete_vertices:
    IGNORE: RR, RC

igraph_ecount:
    IGNORE: RR, RC

igraph_neighbors:
    IGNORE: RR, RC

igraph_is_directed:
    IGNORE: RR, RC

igraph_degree:
    IGNORE: RR, RC

igraph_edge:
    IGNORE: RR, RC, RInit

igraph_edges:
    IGNORE: RR, RC

igraph_get_eid:
    IGNORE: RR, RC, RInit

igraph_get_eids:
    IGNORE: RR, RC, RInit

igraph_incident:
    IGNORE: RR, RC

igraph_is_same_graph:
    # Not needed in R; we can simply compare things in the R layer without
    # calling into C
    IGNORE: RR, RC, RInit

#######################################
# Constructors, deterministic
#######################################

igraph_create:
    IGNORE: RR, RC

igraph_adjacency:
    IGNORE: RR, RC, RInit

igraph_weighted_adjacency:
    IGNORE: RR, RC

igraph_star:
    IGNORE: RR, RC

igraph_lattice:
    IGNORE: RR, RC

igraph_ring:
    IGNORE: RR, RC

igraph_tree:
    IGNORE: RR, RC

igraph_full:
    IGNORE: RR, RC

igraph_full_citation:
    IGNORE: RR
    R:
      GATTR:
        name: Full citation graph

igraph_atlas:
    IGNORE: RR, RC

igraph_extended_chordal_ring:
    IGNORE: RR

igraph_connect_neighborhood:
    IGNORE: RR, RC

igraph_linegraph:
    IGNORE: RR, RC

igraph_de_bruijn:
    IGNORE: RR, RC

igraph_kautz:
    IGNORE: RR, RC

igraph_famous:
    IGNORE: RR, RC

igraph_lcf_vector:
    R:
      GATTR:
        name: LCF graph

igraph_full_bipartite:
    IGNORE: RR

igraph_realize_degree_sequence:
    PARAMS: |-
        OUT GRAPH graph, VECTOR_INT out_deg, VECTOR_INT_OR_0 in_deg=NULL,
        EDGE_TYPE_SW allowed_edge_types=SIMPLE, REALIZE_DEGSEQ_METHOD method=SMALLEST
    R:
      GATTR:
        name: Graph from degree sequence
      GATTR-PARAM: out_deg, in_deg, allowed_edge_types, method

#######################################
# Constructors, games
#######################################

igraph_barabasi_game:
    IGNORE: RR, RC

igraph_erdos_renyi_game_gnp:
    IGNORE: RR, RC, RInit

igraph_erdos_renyi_game_gnm:
    IGNORE: RR, RC, RInit

igraph_degree_sequence_game:
    IGNORE: RR, RC

igraph_growing_random_game:
    IGNORE: RR, RC

igraph_barabasi_aging_game:
    IGNORE: RR, RC

igraph_recent_degree_game:
    IGNORE: RR, RC

igraph_recent_degree_aging_game:
    IGNORE: RR, RC

igraph_callaway_traits_game:
    IGNORE: RR, RC

igraph_establishment_game:
    IGNORE: RR, RC

igraph_grg_game:
    IGNORE: RR, RC, RInit

igraph_preference_game:
    IGNORE: RR

igraph_asymmetric_preference_game:
    IGNORE: RR

igraph_rewire_edges:
    # Handled by rewire() in the R interface and rewire_directed_edges()
    IGNORE: RR

igraph_rewire_directed_edges:
    # Handled by rewire() in the R interface
    IGNORE: RR

igraph_watts_strogatz_game:
    IGNORE: RR, RC

igraph_lastcit_game:
    IGNORE: RR, RC

igraph_cited_type_game:
    IGNORE: RR, RC

igraph_citing_cited_type_game:
    IGNORE: RR, RC

igraph_forest_fire_game:
    R:
        GATTR:
          name: Forest fire model
        GATTR-PARAM: fw_prob, bw_factor, ambs

igraph_simple_interconnected_islands_game:
    IGNORE: RC
    R:
        GATTR:
          name: Interconnected islands model
        GATTR-PARAM: islands_n, islands_size, islands_pin, n_inter

igraph_static_fitness_game:
    R:
        GATTR:
          name: Static fitness model
        GATTR-PARAM: loops, multiple

igraph_static_power_law_game:
    R:
        GATTR:
          name: Static power law model
        GATTR-PARAM: exponent_out, exponent_in, loops, multiple, finite_size_correction

igraph_k_regular_game:
    R:
        GATTR:
          name: k-regular graph
        GATTR-PARAM: k

igraph_sbm_game:
    R:
        GATTR:
          name: Stochastic block model
        GATTR-PARAM: loops

igraph_hsbm_game:
    INTERNAL: true
    R:
        GATTR:
          name: Hierarchical stochastic block model
        GATTR-PARAM: m, rho, C, p

igraph_hsbm_list_game:
    INTERNAL: true
    R:
        GATTR:
          name: Hierarchical stochastic block model
        GATTR-PARAM: p

igraph_correlated_game:
    R:
        GATTR:
          name: Correlated random graph
        GATTR-PARAM: corr, p

#######################################
# Basic query functions
#######################################

igraph_are_connected:
    IGNORE: RR, RC

#######################################
# Structural properties
#######################################

igraph_diameter:
    IGNORE: RR, RC, RInit

igraph_diameter_dijkstra:
    IGNORE: RR, RC, RInit

igraph_minimum_spanning_tree:
    IGNORE: RR, RC, RInit

igraph_minimum_spanning_tree_unweighted:
    IGNORE: RR, RC

igraph_minimum_spanning_tree_prim:
    IGNORE: RR, RC

igraph_closeness:
    IGNORE: RR

igraph_closeness_cutoff:
    IGNORE: RR

igraph_shortest_paths:
    IGNORE: RR, RC, RInit

igraph_get_shortest_paths:
    IGNORE: RR, RC, RInit

igraph_get_all_shortest_paths:
    IGNORE: RR

igraph_shortest_paths_dijkstra:
    IGNORE: RR, RC, RInit

igraph_get_shortest_paths_dijkstra:
    IGNORE: RR, RC, RInit

igraph_get_shortest_paths_bellman_ford:
    IGNORE: RR, RC, RInit

igraph_get_all_shortest_paths_dijkstra:
    IGNORE: RR

igraph_shortest_paths_bellman_ford:
    IGNORE: RR, RC, RInit

igraph_shortest_paths_johnson:
    IGNORE: RR, RC, RInit

igraph_get_all_simple_paths:
    IGNORE: RR
    R:
      PP: get.all.simple.paths.pp

igraph_subcomponent:
    IGNORE: RR, RC

igraph_betweenness:
    IGNORE: RR, RC

igraph_betweenness_cutoff:
    IGNORE: RR

igraph_edge_betweenness:
    IGNORE: RR

igraph_edge_betweenness_cutoff:
    IGNORE: RR

igraph_harmonic_centrality:
    # This is handled by igraph_harmonic_centrality_cutoff
    IGNORE: RR, RC, RInit

igraph_pagerank:
    IGNORE: RR, RC, RInit

igraph_rewire:
    IGNORE: RR, RC

igraph_induced_subgraph:
    IGNORE: RR

igraph_average_path_length:
    # No need for it, igraph_average_path_length_dijkstra takes care of the
    # unweighted case as well
    IGNORE: RR, RC, RInit

igraph_average_path_length_dijkstra:
    PARAM_NAMES:
        unconn_pairs: unconnected
        unconn: unconnected

igraph_transitivity_undirected:
    IGNORE: RR, RC

igraph_transitivity_local_undirected:
    IGNORE: RR, RC

igraph_transitivity_avglocal_undirected:
    IGNORE: RR, RC

igraph_transitivity_barrat:
    IGNORE: RR, RC

igraph_reciprocity:
    IGNORE: RR, RC

igraph_constraint:
    IGNORE: RR, RC

igraph_maxdegree:
    IGNORE: RR, RC, RInit

igraph_density:
    IGNORE: RR, RC

igraph_neighborhood_size:
    IGNORE: RR, RC, RInit

igraph_neighborhood:
    IGNORE: RR, RC, RInit

igraph_neighborhood_graphs:
    IGNORE: RR, RC

igraph_topological_sorting:
    IGNORE: RR, RC

igraph_is_loop:
    PARAM_NAMES:
        es: eids

igraph_is_multiple:
    PARAM_NAMES:
        es: eids

igraph_count_multiple:
    PARAM_NAMES:
        es: eids

igraph_girth:
    IGNORE: RR, RC, RInit

igraph_add_edge:
    IGNORE: RR, RC, RInit

igraph_eigenvector_centrality:
    # This is a temporary hack; we need to find a way to handle default values
    # for dependencies. The problem is that the VERTEXINDEX type needs two
    # dependencies: the graph and the vertex set, but we only have the graph
    # in the argument list.
    DEPS: weights ON graph, vector ON graph V(graph)

igraph_hub_score:
    # This is a temporary hack; we need to find a way to handle default values
    # for dependencies. The problem is that the VERTEXINDEX type needs two
    # dependencies: the graph and the vertex set, but we only have the graph
    # in the argument list.
    DEPS: weights ON graph, vector ON graph V(graph)

igraph_authority_score:
    # This is a temporary hack; we need to find a way to handle default values
    # for dependencies. The problem is that the VERTEXINDEX type needs two
    # dependencies: the graph and the vertex set, but we only have the graph
    # in the argument list.
    DEPS: weights ON graph, vector ON graph V(graph)

igraph_arpack_rssolve:
    IGNORE: RR, RC, RInit

igraph_arpack_rnsolve:
    IGNORE: RR, RC, RInit

igraph_unfold_tree:
    IGNORE: RR

igraph_is_mutual:
    PARAM_NAMES:
        es: eids

igraph_is_chordal:
    IGNORE: RR, RC, RInit

igraph_centralization_degree_tmax:
    # temporarily coded manually because we need to handle a deprecation
    # between igraph 1.3.0 and 1.4.0
    IGNORE: RR

igraph_random_walk:
    PARAM_ORDER: graph, start, steps, ...

igraph_random_edge_walk:
    PARAM_ORDER: graph, start, steps, ...

#######################################
# Degree sequences
#######################################

igraph_is_degree_sequence:
    IGNORE: RR, RC, RInit

igraph_is_graphical_degree_sequence:
    IGNORE: RR, RC, RInit

igraph_is_bigraphical:
    IGNORE: RR, RC, RInit

#######################################
# Visitors
#######################################

igraph_bfs:
    IGNORE: RR, RC, RInit

igraph_dfs:
    IGNORE: RR, RC, RInit

#######################################
# Bipartite graphs
#######################################

igraph_bipartite_projection:
    IGNORE: RR, RC, RInit

igraph_create_bipartite:
    IGNORE: RR

igraph_bipartite_game_gnp:
    IGNORE: RR

igraph_bipartite_game_gnm:
    IGNORE: RR

#######################################
# Spectral properties
#######################################

igraph_laplacian:
    IGNORE: RR, RC, RInit

#######################################
# Components
#######################################

igraph_connected_components:
    IGNORE: RR

igraph_decompose:
    IGNORE: RR, RC

#######################################
# Cliques
#######################################

igraph_cliques:
    PARAM_NAMES:
        min_size: min
        max_size: max

igraph_cliques_callback:
    IGNORE: RR, RC, RInit

igraph_maximal_cliques:
    IGNORE: RR, RC, RInit

igraph_maximal_cliques_callback:
    IGNORE: RR, RC, RInit

igraph_maximal_cliques_count:
    IGNORE: RR, RC, RInit

igraph_maximal_cliques_file:
    IGNORE: RR, RC, RInit

igraph_clique_size_hist:
    # Wrapper function is hand-rolled in the R layer; the generated version
    # is renamed and internal
    INTERNAL: true

igraph_maximal_cliques_hist:
    # Wrapper function is hand-rolled in the R layer; the generated version
    # is renamed and internal
    INTERNAL: true

igraph_weighted_cliques_callback:
    IGNORE: RR, RC, RInit

igraph_independent_vertex_sets:
    IGNORE: RR, RC

igraph_largest_independent_vertex_sets:
    IGNORE: RR, RC

igraph_maximal_independent_vertex_sets:
    IGNORE: RR, RC

igraph_independence_number:
    IGNORE: RR, RC

#######################################
# Layouts
#######################################

igraph_layout_random:
    IGNORE: RR, RC

igraph_layout_circle:
    IGNORE: RR, RC

igraph_layout_star:
    IGNORE: RR

igraph_layout_grid:
    IGNORE: RR

igraph_layout_grid_3d:
    IGNORE: RR

igraph_layout_fruchterman_reingold:
    IGNORE: RR, RC, RInit

igraph_layout_kamada_kawai:
    IGNORE: RR, RC, RInit

igraph_layout_lgl:
    IGNORE: RR, RC

igraph_layout_reingold_tilford:
    IGNORE: RR, RC, RInit

igraph_layout_reingold_tilford_circular:
    IGNORE: RR, RC, RInit

igraph_layout_random_3d:
    IGNORE: RR, RC

igraph_layout_sphere:
    IGNORE: RR, RC

igraph_layout_fruchterman_reingold_3d:
    IGNORE: RR, RC, RInit

igraph_layout_kamada_kawai_3d:
    IGNORE: RR, RC, RInit

igraph_layout_graphopt:
    IGNORE: RR, RC, RInit

igraph_layout_drl:
    IGNORE: RR

igraph_layout_drl_3d:
    IGNORE: RR

igraph_layout_merge_dla:
    IGNORE: RR, RC

igraph_layout_sugiyama:
    IGNORE: RR

igraph_layout_mds:
    IGNORE: RR

igraph_layout_bipartite:
    IGNORE: RR

igraph_layout_gem:
    IGNORE: RR

igraph_layout_davidson_harel:
    IGNORE: RR

#######################################
# Cocitation and other similarity measures
#######################################

igraph_cocitation:
    IGNORE: RR, RC

igraph_bibcoupling:
    IGNORE: RR, RC

#######################################
# Community structure
#######################################

igraph_compare_communities:
    IGNORE: RR

igraph_community_spinglass:
    IGNORE: RR, RC, RInit

igraph_community_spinglass_single:
    IGNORE: RR, RC, RInit

igraph_community_walktrap:
    IGNORE: RR, RC, RInit

igraph_community_edge_betweenness:
    IGNORE: RR, RC, RInit

igraph_community_eb_get_merges:
    IGNORE: RR, RC, RInit

igraph_community_fastgreedy:
    IGNORE: RR, RC, RInit

igraph_community_to_membership:
    IGNORE: RR, RC, RInit

igraph_le_community_to_membership:
    IGNORE: RR, RC, RInit

igraph_modularity:
    IGNORE: RR

igraph_modularity_matrix:
    IGNORE: RR

igraph_reindex_membership:
    IGNORE: RR, RC, RInit

igraph_community_leading_eigenvector:
    IGNORE: RR, RC, RInit
    R:
        CLASS: igraph.eigenc

igraph_community_fluid_communities:
    IGNORE: RR

igraph_community_label_propagation:
    IGNORE: RR

igraph_community_leiden:
    IGNORE: RR

igraph_community_multilevel:
    IGNORE: RR

igraph_community_optimal_modularity:
    IGNORE: RR

igraph_split_join_distance:
    IGNORE: RR

igraph_hrg_fit:
    IGNORE: RR
    R:
        CLASS: igraphHRG

igraph_hrg_game:
    R:
      GATTR:
        name: Hierarchical random graph model

igraph_hrg_predict:
    IGNORE: RR

igraph_hrg_create:
    R:
        CLASS: igraphHRG

igraph_community_infomap:
    IGNORE: RR

igraph_graphlets:
    IGNORE: RC

igraph_graphlets_candidate_basis:
    IGNORE: RR, RC

igraph_graphlets_project:
    IGNORE: RR, RC, RInit

#######################################
# Conversion
#######################################

igraph_get_adjacency:
    IGNORE: RR, RC

igraph_get_edgelist:
    IGNORE: RR, RC

igraph_invalidate_cache:
    PARAMS: INOUT GRAPH graph
    IGNORE: RR

igraph_write_graph_dimacs_flow:
    PARAMS: |-
        INOUT GRAPH graph, OUTFILE outstream, VERTEX source=0, VERTEX target=0,
        VECTOR capacity
    IGNORE: RR

igraph_to_directed:
    PARAMS: INOUT GRAPH graph, TODIRECTED mode=MUTUAL

igraph_to_undirected:
    IGNORE: RR

igraph_get_stochastic:
    IGNORE: RR

#######################################
# Read and write foreign formats
#######################################

igraph_read_graph_edgelist:
    IGNORE: RR, RC

igraph_read_graph_ncol:
    IGNORE: RR, RC

igraph_read_graph_lgl:
    IGNORE: RR, RC

igraph_read_graph_pajek:
    IGNORE: RR, RC

igraph_read_graph_graphml:
    IGNORE: RR, RC

igraph_read_graph_dimacs:
    IGNORE: RR, RC

igraph_read_graph_graphdb:
    IGNORE: RR, RC

igraph_read_graph_gml:
    IGNORE: RR, RC

igraph_read_graph_dl:
    IGNORE: RR, RC

igraph_write_graph_edgelist:
    IGNORE: RR, RC

igraph_write_graph_ncol:
    IGNORE: RR, RC

igraph_write_graph_lgl:
    IGNORE: RR, RC

igraph_write_graph_leda:
    IGNORE: RR, RC

igraph_write_graph_graphml:
    IGNORE: RR, RC

igraph_write_graph_pajek:
    IGNORE: RR, RC

igraph_write_graph_dimacs:
    IGNORE: RR, RC

igraph_write_graph_gml:
    IGNORE: RR, RC

igraph_write_graph_dot:
    IGNORE: RR, RC

#######################################
# Motifs
#######################################

igraph_motifs_randesu:
    IGNORE: RR, RC

igraph_motifs_randesu_estimate:
    IGNORE: RR, RC

igraph_motifs_randesu_no:
    IGNORE: RR, RC

igraph_local_scan_0:
    IGNORE: RR

igraph_local_scan_0_them:
    IGNORE: RR

igraph_local_scan_1_ecount:
    IGNORE: RR

igraph_local_scan_1_ecount_them:
    IGNORE: RR

igraph_local_scan_k_ecount:
    IGNORE: RR

igraph_local_scan_k_ecount_them:
    IGNORE: RR

igraph_local_scan_neighborhood_ecount:
    IGNORE: RR

#######################################
# Graph operators
#######################################

igraph_disjoint_union:
    IGNORE: RR, RC, RInit

igraph_disjoint_union_many:
    IGNORE: RR, RC, RInit

igraph_union:
    IGNORE: RR, RC

igraph_union_many:
    IGNORE: RR, RC, RInit

igraph_intersection:
    IGNORE: RR, RC

igraph_intersection_many:
    IGNORE: RR, RC, RInit

igraph_difference:
    IGNORE: RR, RC

igraph_complementer:
    IGNORE: RR, RC

igraph_compose:
    IGNORE: RR, RC, RInit

#######################################
# Maximum flows, minimum cuts
#######################################

igraph_maxflow_value:
    IGNORE: RR, RC, RInit

igraph_mincut_value:
    IGNORE: RR, RC

igraph_st_mincut_value:
    IGNORE: RR, RC

igraph_mincut:
    IGNORE: RR, RC

igraph_st_mincut:
    IGNORE: RR

igraph_st_vertex_connectivity:
    IGNORE: RR, RC, RInit

igraph_vertex_connectivity:
    IGNORE: RR, RC

igraph_st_edge_connectivity:
    IGNORE: RR, RC

igraph_edge_connectivity:
    IGNORE: RR, RC

igraph_edge_disjoint_paths:
    IGNORE: RR, RC

igraph_vertex_disjoint_paths:
    IGNORE: RR, RC

igraph_adhesion:
    IGNORE: RR, RC

igraph_cohesion:
    IGNORE: RR, RC

#######################################
# Listing s-t cuts, separators
#######################################

igraph_cohesive_blocks:
    IGNORE: RR, RC
    R:
        CLASS: cohesiveBlocks

#######################################
# K-Cores
#######################################

igraph_coreness:
    IGNORE: RR, RC

#######################################
# Graph isomorphism
#######################################

igraph_isoclass_subgraph:
    IGNORE: RR

igraph_get_isomorphisms_vf2:
    IGNORE: RR

igraph_get_subisomorphisms_vf2:
    IGNORE: RR

igraph_subisomorphic_lad:
    IGNORE: RR, RC, RInit

igraph_simplify_and_colorize:
    # Despite their names, vertex_color and edge_color are not really colors
    # but _multiplicities_, so we simply use VECTOR_INT there
    PARAMS: |-
        GRAPH graph, OUT GRAPH res, OUT VECTOR_INT vertex_color, OUT VECTOR_INT edge_color
    # R function is hand-rolled
    IGNORE: RR

#######################################
# SCG
#######################################

# TODO: define what to do with SCG
# scg is in separate repository from

# igraph_scg_grouping:
#     IGNORE: RR

# igraph_scg_semiprojectors:
#     IGNORE: RR, RC, RInit

# igraph_scg_adjacency:
#     IGNORE: RR, RC, RInit

# igraph_scg_stochastic:
#     IGNORE: RR, RC, RInit

# igraph_scg_laplacian:
#     IGNORE: RR, RC, RInit

#######################################
# Matching
#######################################

igraph_is_matching:
    IGNORE: RR

igraph_is_maximal_matching:
    IGNORE: RR

igraph_maximum_bipartite_matching:
    IGNORE: RR

#######################################
# Embedding
#######################################

igraph_adjacency_spectral_embedding:
    IGNORE: RC

igraph_laplacian_spectral_embedding:
    IGNORE: RC

#######################################
# Eigensolvers
#######################################

#######################################
# Fitting power laws
#######################################

igraph_power_law_fit:
    IGNORE: RR

#######################################
# Dynamics, on networks
#######################################

igraph_sir:
    R:
        CLASS: sir

#######################################
# Other, not graph related
#######################################

igraph_running_mean:
    IGNORE: RR, RC

igraph_random_sample:
    IGNORE: RR, RC

igraph_convex_hull:
    # Fixing incorrect typing in 0.9, can be removed once we update to 0.10
    PARAMS: MATRIX data, OUT VECTORM1 resverts, OUT MATRIX rescoords

#######################################
# Eulerian functions
#######################################

igraph_is_eulerian:
    INTERNAL: true

igraph_eulerian_path:
    PARAM_NAMES:
        edge_res: epath
        vertex_res: vpath

igraph_eulerian_cycle:
    PARAM_NAMES:
        edge_res: epath
        vertex_res: vpath

#######################################
# Trees
#######################################

igraph_from_prufer:
    R:
        GATTR:
          name: Tree from Prufer sequence
        GATTR-PARAM: prufer

igraph_random_spanning_tree:
    PARAMS: GRAPH graph, OUT EDGE_INDICES res, OPTIONAL VERTEX vid=0

#######################################
# Coloring
#######################################

#######################################
# Other, (yet) undocumented functions
#######################################

igraph_convergence_degree:
    IGNORE: RR, RC, RInit
