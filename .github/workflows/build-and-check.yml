# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches:
      - dev
      - fix/*
  pull_request:
    branches:
      - dev
      - fix/*

name: R-CMD-check

jobs:
  build_src_package:
    runs-on: ubuntu-20.04

    name: Build source R package

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      _R_CHECK_FORCE_SUGGESTS_: false   # graph package is unavailable
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.2.1'

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: R-source-${{ runner.os }}

      - name: Cache Python virtualenv
        uses: actions/cache@v2
        with:
          path: .venv
          key: Python-venv-${{ runner.os }}-${{ hashFiles('tools/build-requirements.txt') }}

      - name: Install necessary dependencies
        run: |
          sudo apt install libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev
          Rscript -e 'install.packages(c("roxygen2", "devtools", "irlba", "pkgconfig"))'
        shell: bash

      - name: Create R source package
        run: |
          make igraph
        shell: bash

      - name: Upload R source package
        uses: actions/upload-artifact@v2
        with:
          name: rigraph
          path: igraph_*.tar.gz
          retention-days: 5

  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    needs: build_src_package

    name: Check ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest,   r: 'release'}
          - {os: ubuntu-20.04,   r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: ubuntu-20.04,   r: 'devel',   rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: ubuntu-20.04,   r: 'oldrel',  rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: ubuntu-20.04,   r: '3.5',     rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: ubuntu-20.04,   r: '3.4',     rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      _R_CHECK_FORCE_SUGGESTS_: false # graph package is unavailable
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RGL_USE_NULL: true  # Ensure that rgl functions correctly on macOS
      MAKEFLAGS: -j2

    steps:
      - name: Download R source package
        uses: actions/download-artifact@v2
        with:
          name: rigraph

      - name: Extract source package
        run: tar -xvf igraph*.tar.gz
        shell: bash

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          rtools-version: 42e
          update-rtools: true

      - name: Setup Pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Install R dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check
          working-directory: igraph

      - name: Check R package
        uses: r-lib/actions/check-r-package@v2
        with:
          working-directory: igraph

  # Automatically deploy the source code to the master branch
  deploy_src:
    runs-on: ubuntu-20.04

    name: Deploy source R package to master branch

    if: success() && github.ref == 'refs/heads/dev'
    needs: R-CMD-check

    steps:
      - name: Checkout master branch
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Download R source package
        uses: actions/download-artifact@v2
        with:
          name: rigraph

      - name: Extract source package
        run: |
          find . -type f -maxdepth 1 | grep -v 'igraph.*tar.gz' | xargs rm
          rm -rf R build demo doc inst man src tests
          tar -xvf igraph*.tar.gz --strip-components=1
          rm *.tar.gz

      - name: Push to master branch
        run: |
          # Setup the username and email.
          git config user.name "GH actions bot"
          git config user.email "<>"

          # Stage files, commit and push
          git add .
          git commit -m "${{ github.event.head_commit.message }} [Triggered by ${{ github.event.after }}]"
          git push origin master
